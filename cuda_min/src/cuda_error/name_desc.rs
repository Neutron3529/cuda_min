pub fn get_name_desc(code: std::ffi::c_int) -> (&'static str, &'static str) {
    match code {
        0 => ("cudaSuccess", "no error"),
        1 => ("cudaErrorInvalidValue", "invalid argument"),
        2 => ("cudaErrorMemoryAllocation", "out of memory"),
        3 => ("cudaErrorInitializationError", "initialization error"),
        4 => ("cudaErrorCudartUnloading", "driver shutting down"),
        5 => ("cudaErrorProfilerDisabled", "profiler disabled while using external profiling tool"),
        6 => ("cudaErrorProfilerNotInitialized", "profiler not initialized: call cudaProfilerInitialize()"),
        7 => ("cudaErrorProfilerAlreadyStarted", "profiler already started"),
        8 => ("cudaErrorProfilerAlreadyStopped", "profiler already stopped"),
        9 => ("cudaErrorInvalidConfiguration", "invalid configuration argument"),
        12 => ("cudaErrorInvalidPitchValue", "invalid pitch argument"),
        13 => ("cudaErrorInvalidSymbol", "invalid device symbol"),
        16 => ("cudaErrorInvalidHostPointer", "invalid host pointer"),
        17 => ("cudaErrorInvalidDevicePointer", "invalid device pointer"),
        18 => ("cudaErrorInvalidTexture", "invalid texture reference"),
        19 => ("cudaErrorInvalidTextureBinding", "texture is not bound to a pointer"),
        20 => ("cudaErrorInvalidChannelDescriptor", "invalid channel descriptor"),
        21 => ("cudaErrorInvalidMemcpyDirection", "invalid copy direction for memcpy"),
        22 => ("cudaErrorAddressOfConstant", "invalid address of constant"),
        23 => ("cudaErrorTextureFetchFailed", "fetch from texture failed"),
        24 => ("cudaErrorTextureNotBound", "cannot fetch from a texture that is not bound"),
        25 => ("cudaErrorSynchronizationError", "incorrect use of __syncthreads()"),
        26 => ("cudaErrorInvalidFilterSetting", "linear filtering not supported for non-float type"),
        27 => ("cudaErrorInvalidNormSetting", "read as normalized float not supported for data type"),
        28 => ("cudaErrorMixedDeviceExecution", "device emulation mode and device execution mode cannot be mixed"),
        31 => ("cudaErrorNotYetImplemented", "feature not yet implemented"),
        32 => ("cudaErrorMemoryValueTooLarge", "memory size or pointer value too large to fit in 32 bit"),
        34 => ("cudaErrorStubLibrary", "CUDA driver is a stub library"),
        35 => ("cudaErrorInsufficientDriver", "CUDA driver version is insufficient for CUDA runtime version"),
        36 => ("cudaErrorCallRequiresNewerDriver", "API call is not supported in the installed CUDA driver"),
        37 => ("cudaErrorInvalidSurface", "invalid surface reference"),
        43 => ("cudaErrorDuplicateVariableName", "duplicate global variable looked up by string name"),
        44 => ("cudaErrorDuplicateTextureName", "duplicate texture looked up by string name"),
        45 => ("cudaErrorDuplicateSurfaceName", "duplicate surface looked up by string name"),
        46 => ("cudaErrorDevicesUnavailable", "CUDA-capable device(s) is/are busy or unavailable"),
        49 => ("cudaErrorIncompatibleDriverContext", "incompatible driver context"),
        52 => ("cudaErrorMissingConfiguration", "__global__ function call is not configured"),
        53 => ("cudaErrorPriorLaunchFailure", "unspecified launch failure in prior launch"),
        65 => ("cudaErrorLaunchMaxDepthExceeded", "launch would exceed maximum depth of nested launches"),
        66 => ("cudaErrorLaunchFileScopedTex", "launch failed because kernel uses unsupported, file-scoped textures (texture objects are supported)"),
        67 => ("cudaErrorLaunchFileScopedSurf", "launch failed because kernel uses unsupported, file-scoped surfaces (surface objects are supported)"),
        68 => ("cudaErrorSyncDepthExceeded", "cudaDeviceSynchronize failed because caller\'s grid depth exceeds cudaLimitDevRuntimeSyncDepth"),
        69 => ("cudaErrorLaunchPendingCountExceeded", "launch failed because launch would exceed cudaLimitDevRuntimePendingLaunchCount"),
        98 => ("cudaErrorInvalidDeviceFunction", "invalid device function"),
        100 => ("cudaErrorNoDevice", "no CUDA-capable device is detected"),
        101 => ("cudaErrorInvalidDevice", "invalid device ordinal"),
        102 => ("cudaErrorDeviceNotLicensed", "device doesn\'t have valid Grid license"),
        103 => ("cudaErrorSoftwareValidityNotEstablished", "integrity checks failed"),
        127 => ("cudaErrorStartupFailure", "startup failure in cuda runtime"),
        200 => ("cudaErrorInvalidKernelImage", "device kernel image is invalid"),
        201 => ("cudaErrorDeviceUninitialized", "invalid device context"),
        205 => ("cudaErrorMapBufferObjectFailed", "mapping of buffer object failed"),
        206 => ("cudaErrorUnmapBufferObjectFailed", "unmapping of buffer object failed"),
        207 => ("cudaErrorArrayIsMapped", "array is mapped"),
        208 => ("cudaErrorAlreadyMapped", "resource already mapped"),
        209 => ("cudaErrorNoKernelImageForDevice", "no kernel image is available for execution on the device"),
        210 => ("cudaErrorAlreadyAcquired", "resource already acquired"),
        211 => ("cudaErrorNotMapped", "resource not mapped"),
        212 => ("cudaErrorNotMappedAsArray", "resource not mapped as array"),
        213 => ("cudaErrorNotMappedAsPointer", "resource not mapped as pointer"),
        214 => ("cudaErrorECCUncorrectable", "uncorrectable ECC error encountered"),
        215 => ("cudaErrorUnsupportedLimit", "limit is not supported on this architecture"),
        216 => ("cudaErrorDeviceAlreadyInUse", "exclusive-thread device already in use by a different thread"),
        217 => ("cudaErrorPeerAccessUnsupported", "peer access is not supported between these two devices"),
        218 => ("cudaErrorInvalidPtx", "a PTX JIT compilation failed"),
        219 => ("cudaErrorInvalidGraphicsContext", "invalid OpenGL or DirectX context"),
        220 => ("cudaErrorNvlinkUncorrectable", "uncorrectable NVLink error detected during the execution"),
        221 => ("cudaErrorJitCompilerNotFound", "PTX JIT compiler library not found"),
        222 => ("cudaErrorUnsupportedPtxVersion", "the provided PTX was compiled with an unsupported toolchain."),
        223 => ("cudaErrorJitCompilationDisabled", "PTX JIT compilation was disabled"),
        224 => ("cudaErrorUnsupportedExecAffinity", "the provided execution affinity is not supported"),
        225 => ("cudaErrorUnsupportedDevSideSync", "the provided PTX contains unsupported call to cudaDeviceSynchronize"),
        226 => ("cudaErrorContained", "Invalid access of peer GPU memory over nvlink or a hardware error"),
        300 => ("cudaErrorInvalidSource", "device kernel image is invalid"),
        301 => ("cudaErrorFileNotFound", "file not found"),
        302 => ("cudaErrorSharedObjectSymbolNotFound", "shared object symbol not found"),
        303 => ("cudaErrorSharedObjectInitFailed", "shared object initialization failed"),
        304 => ("cudaErrorOperatingSystem", "OS call failed or operation not supported on this OS"),
        400 => ("cudaErrorInvalidResourceHandle", "invalid resource handle"),
        401 => ("cudaErrorIllegalState", "the operation cannot be performed in the present state"),
        402 => ("cudaErrorLossyQuery", "attempted introspection would be semantically lossy"),
        500 => ("cudaErrorSymbolNotFound", "named symbol not found"),
        600 => ("cudaErrorNotReady", "device not ready"),
        700 => ("cudaErrorIllegalAddress", "an illegal memory access was encountered"),
        701 => ("cudaErrorLaunchOutOfResources", "too many resources requested for launch"),
        702 => ("cudaErrorLaunchTimeout", "the launch timed out and was terminated"),
        703 => ("cudaErrorLaunchIncompatibleTexturing", "launch uses incompatible texturing mode"),
        704 => ("cudaErrorPeerAccessAlreadyEnabled", "peer access is already enabled"),
        705 => ("cudaErrorPeerAccessNotEnabled", "peer access has not been enabled"),
        708 => ("cudaErrorSetOnActiveProcess", "cannot set while device is active in this process"),
        709 => ("cudaErrorContextIsDestroyed", "context is destroyed"),
        710 => ("cudaErrorAssert", "device-side assert triggered"),
        711 => ("cudaErrorTooManyPeers", "peer mapping resources exhausted"),
        712 => ("cudaErrorHostMemoryAlreadyRegistered", "part or all of the requested memory range is already mapped"),
        713 => ("cudaErrorHostMemoryNotRegistered", "pointer does not correspond to a registered memory region"),
        714 => ("cudaErrorHardwareStackError", "hardware stack error"),
        715 => ("cudaErrorIllegalInstruction", "an illegal instruction was encountered"),
        716 => ("cudaErrorMisalignedAddress", "misaligned address"),
        717 => ("cudaErrorInvalidAddressSpace", "operation not supported on global/shared address space"),
        718 => ("cudaErrorInvalidPc", "invalid program counter"),
        719 => ("cudaErrorLaunchFailure", "unspecified launch failure"),
        720 => ("cudaErrorCooperativeLaunchTooLarge", "too many blocks in cooperative launch"),
        721 => ("cudaErrorTensorMemoryLeak", "tensor memory not completely freed"),
        800 => ("cudaErrorNotPermitted", "operation not permitted"),
        801 => ("cudaErrorNotSupported", "operation not supported"),
        802 => ("cudaErrorSystemNotReady", "system not yet initialized"),
        803 => ("cudaErrorSystemDriverMismatch", "system has unsupported display driver / cuda driver combination"),
        804 => ("cudaErrorCompatNotSupportedOnDevice", "forward compatibility was attempted on non supported HW"),
        805 => ("cudaErrorMpsConnectionFailed", "MPS client failed to connect to the MPS control daemon or the MPS server"),
        806 => ("cudaErrorMpsRpcFailure", "the remote procedural call between the MPS server and the MPS client failed"),
        807 => ("cudaErrorMpsServerNotReady", "MPS server is not ready to accept new MPS client requests"),
        808 => ("cudaErrorMpsMaxClientsReached", "the hardware resources required to create MPS client have been exhausted"),
        809 => ("cudaErrorMpsMaxConnectionsReached", "the hardware resources required to support device connections have been exhausted"),
        810 => ("cudaErrorMpsClientTerminated", "the MPS client has been terminated by the server"),
        811 => ("cudaErrorCdpNotSupported", "is using CUDA Dynamic Parallelism, but the current configuration, like MPS, does not support it"),
        812 => ("cudaErrorCdpVersionMismatch", "unsupported interaction between different versions of CUDA Dynamic Parallelism"),
        900 => ("cudaErrorStreamCaptureUnsupported", "operation not permitted when stream is capturing"),
        901 => ("cudaErrorStreamCaptureInvalidated", "operation failed due to a previous error during capture"),
        902 => ("cudaErrorStreamCaptureMerge", "operation would result in a merge of separate capture sequences"),
        903 => ("cudaErrorStreamCaptureUnmatched", "capture was not ended in the same stream as it began"),
        904 => ("cudaErrorStreamCaptureUnjoined", "capturing stream has unjoined work"),
        905 => ("cudaErrorStreamCaptureIsolation", "dependency created on uncaptured work in another stream"),
        906 => ("cudaErrorStreamCaptureImplicit", "operation would make the legacy stream depend on a capturing blocking stream"),
        907 => ("cudaErrorCapturedEvent", "operation not permitted on an event last recorded in a capturing stream"),
        908 => ("cudaErrorStreamCaptureWrongThread", "attempt to terminate a thread-local capture sequence from another thread"),
        909 => ("cudaErrorTimeout", "wait operation timed out"),
        910 => ("cudaErrorGraphExecUpdateFailure", "the graph update was not performed because it included changes which violated constraints specific to instantiated graph update"),
        911 => ("cudaErrorExternalDevice", "an async error has occured in external entity outside of CUDA"),
        912 => ("cudaErrorInvalidClusterSize", "a kernel launch error has occurred due to cluster misconfiguration"),
        913 => ("cudaErrorFunctionNotLoaded", "the function handle is not loaded when calling an API that requires a loaded function"),
        914 => ("cudaErrorInvalidResourceType", "one or more resources passed in are not valid resource types for the operation"),
        915 => ("cudaErrorInvalidResourceConfiguration", "one or more resources are insufficient or non-applicable for the operation"),
        999 => ("cudaErrorUnknown", "unknown error"),
        10000 => ("cudaErrorApiFailureBase", "api failure base"),
        _ => ("unrecognized error code", "")
    }
}
